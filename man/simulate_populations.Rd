% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/simulate_growth.R
\name{simulate_populations}
\alias{simulate_populations}
\title{Basic forward genetic simulation with migration, mutation, and selection.}
\usage{
simulate_populations(
  genotypes,
  meta,
  phenotypes = NULL,
  BVs = NULL,
  h,
  gens,
  chr_length,
  migration = FALSE,
  starting_surv_opt = NULL,
  mutation = 0,
  inbreeding = 0,
  ped = NULL,
  mutation_effect_function = NULL,
  growth_function = function(n) logistic_growth(n, 500, 2),
  survival_function = function(phenotypes, opt_pheno, ...) BL_survival(phenotypes,
    opt_pheno, omega = 1),
  selection_shift_function = function(opt, iv) optimum_constant_slide(opt, iv, 0.3),
  rec_dist = function(n) rpois(n, lambda = 1),
  var_theta = 0,
  plot_during_progress = FALSE,
  facet = "group",
  do_sexes = TRUE,
  effects = NULL,
  thin = FALSE,
  thin_fixed = TRUE,
  verbose = FALSE,
  print_all_freqs = F,
  print_all_thinned_freqs = FALSE,
  sampling_point = "migrants",
  stop_if_no_variance = FALSE,
  track_ped = FALSE,
  K_thin_post_surv = NULL
)
}
\arguments{
\item{genotypes}{Either a snpRdata object, an list of unphased of genotype
matrices, or NULL. If a matrices, one row per snp and one column per
chromosome/gene copy, with allelic states designated with either 0 or 1. No
missing data is allowed. Copies from individuals must be sequential. Each
matrix is a population; a single matrix may be provided if only one
population is desired. If a snpRdata object, requires \code{beagle_path}
and \code{java_path} both be valid and point to the "beagle" software and
"java", respectively.}

\item{meta}{data.frame of snp metadata or NULL. If a data.frame, first column
must contain chromosome info, the second position in base pairs, and the
third must be named "effects" and contain numeric effect sizes for each
locus. If no selection is desired, each effect can be zero.}

\item{phenotypes}{numeric vector, phenotypes for starting individuals.
Calculated from either provided BVs or effects if not provided.}

\item{BVs}{numeric vector, breeding values for starting individuals.
Calculated from effects if not provided.}

\item{h}{numeric. Narrow-sense heritability, between 0 and 1.}

\item{gens}{numeric, maximum number of generations to simulate.}

\item{chr_length}{numeric vector of chromosome lengths \emph{in the same
order as would be given by \code{unique(meta[,1])}}.}

\item{migration}{FALSE or a matrix of pairwise migration rates between
populations. Each rate must be between 0 and 1, with rates given from row
into column. Rows must sum to 1. Population order matches the genotypes
provided or the order given by \code{\link{summarize_facets}} when
requesting info on the provided \code{pop_facet}.}

\item{starting_surv_opt}{numeric, default NULL. Vector of initial optimum
phenotypes for each population. If NULL, assumes that the mean BV in each
population is the starting optimum.}

\item{mutation}{numeric, default 0. The per-base, per-generation mutation
rate.}

\item{inbreeding}{numeric, default 0. A vector providing inbreeding targets
in each population. Targets give the relative increase or decrease in the
number of parental crosses each generation with a higher-than-average
relatedness, so a value of 1 would double the number and a value of -1
would half it. Population order matches the genotypes provided or the order
given by \code{\link{summarize_facets}} when requesting info on the
provided \code{pop_facet}. Only works when \code{do_sexes} is TRUE.}

\item{growth_function}{function, default \code{function(n) logistic_growth(n,
500, 2)} the growth function to use during simulation, needs to take an
argument \code{n}, the number of current individuals. See 
\code{\link{population_growth_functions}}.}

\item{survival_function}{function, default \code{function(phenotypes,
opt_pheno, ...) BL_survival(phenotypes, opt_pheno, omega = 1)}. Function
for calculating survival probabilities of individuals. Needs two arguments:
\code{phenotypes}: individual phenotypes and \code{opt_pheno}: optimum
phenotype in a given generation. See \code{\link{survival_distributions}}.}

\item{selection_shift_function}{function, default \code{function(opt, iv)
optimum_constant_slide(opt, iv, 0.3)}. Function for determining how much
the fitness optimum changes each generation. Expects two arguments:
\code{opt}: the current fitness optimum. \code{iv}: the initial genetic
variance (the fitness optimum can slide as a function of the amount of
initial genetic variance in the population). See
\code{\link{optimum_slide_functions}}.}

\item{do_sexes}{logical, default TRUE. If TRUE, individuals are assigned
randomly to one of two sexes when mating. The population will go extinct if
all individuals are of a single sex in a generation.}

\item{thin}{logical, default FALSE. If TRUE, sites with no effect will be
trimmed from analysis and reports unless all loci have no effects. This can
massively reduce run time if few sites have effects. Set to FALSE if, for
example, you wish to examine the effect of selection on linked, neutral
loci or are running a simulation without selection.}

\item{thin_fixed}{logical, default TRUE. If TRUE, loci which become fixed in
all population will be removed from the simulation to save on computation
time.}

\item{stop_if_no_variance}{logical, default FALSE. If TRUE, will stop and
return an error if no genetic variance remains in the population.}

\item{rec_dis}{function, default \code{function(n) rpois(n, lambda = 1)}.
Function for determining how many recombination events occur per-generation,
per-chromosome, per-cross. Requires the argument \code{n}, the number of
chromosomes for which recombinations are needed.}

\item{pop_facet}{character, default NULL. If a snpRdata object is provided to
\code{genotypes}, a sample facet may be provided noting populations.}
}
\description{
Simulates populations forward in time given potentially variable migration,
mutation, recombination, and selection processes. Requires a phased genotypic
input, although a snpRdata object can be phased and used automatically if
the program "beagle" is available.
}
