% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/snpRdata.R
\name{import.snpR.data}
\alias{import.snpR.data}
\title{Import genotype and metadata into a snpRdata object.}
\usage{
import.snpR.data(
  genotypes,
  snp.meta = NULL,
  sample.meta = NULL,
  mDat = "NN",
  chr.length = NULL,
  ...,
  header_cols = 0,
  rows_per_individual = 2,
  marker_and_sample_names = FALSE,
  verbose = FALSE
)
}
\arguments{
\item{genotypes}{data.frame, unique S4 from other packages, or filename. If a
data.frame, raw genotypes in a two-character format ("GG", "GA", "CT",
"NN"), where SNPs are in rows and individual samples are in columns.
Otherwise, see documentation for allowed S4 objects and files.}

\item{snp.meta}{data.frame, default NULL. Metadata for each SNP, must have a
number of rows equal to the number of SNPs in the dataset. If NULL, a single
"snpID" column will be added.}

\item{sample.meta}{data.frame, default NULL. Metadata for each individual
sample, must have a number of rows equal to the number of samples in the
dataset. If NULL, a single "sampID" column will be added.}

\item{mDat}{character, default "NN", matching the encoding of missing
\emph{genotypes} in the data provided to the genotypes argument.}

\item{chr.length}{numeric, default NULL. If a path to a .ms file is provided,
specifies chromosome lengths. Note that a single value assumes that each
chromosome is of equal length whereas a vector of values gives the length
for each chromosome in order.}

\item{...}{Additional arguments passed to \code{\link[data.table]{fread}} if a
\emph{genotype} file name is passed that is not a vcf or ms file.}

\item{header_cols}{numeric, default 0. Number of header columns containing
sample metadata. Used if a tab delimited or structre input file is provided.}

\item{rows_per_individual}{numeric (1 or 2), default 2. Number of rows used
for each individual. For structure input files only.}

\item{marker_and_sample_names}{logical, default FALSE. If TRUE, assumes that a
header row of marker and sample/sample metadata names is present. For
structure input files only.}

\item{verbose}{Logical, default FALSE. If TRUE, will print a few status updates and checks.}
}
\description{
\code{import.snpR.data} converts genotype and meta data to the snpRdata class,
which stores raw genotype data, sample and locus specific metadata, useful
data summaries, repeatedly internally used tables, calculated summary
statistics, and smoothed statistic data.
}
\details{
The snpRdata class is built to contain SNP genotype data for use by functions
in the snpR package. It inherits from the S3 class data.frame, in which the
genotypes are stored, and can be manipulated identically. It also stores
sample and locus specific metadata, genomic summary information, and results
from most snpR functions. Genotypes are stored in the "character" format, as
output by \code{\link{format_snps}}. Missing data is noted with "NN".
}
\section{File import}{
 Supports automatic import of several types of files.
 Options:

 \itemize{\item{.vcf or .vcf.gz: } Variant Call Format (vcf) files, supported
 via \code{\link[vcfR]{vcfR}}. If not otherwise provided, snp metadata is
 taken from the fixed fields in the VCF and sample metadata from the sample
 IDs. Note that this only imports SNPs with called genotypes! \item{.ms: }
 Files in the ms format, as provided by many commonly used simulation tools.
 \item{NN: } SNP genotypes stored as actual base calls (e.g. "AA", "CT").
 \item{0000: }SNP genotypes stored as four numeric characters (e.g. "0101",
 "0204"). \item{snp_tab: }SNP genotypes stored with genotypes in each cell,
 but only a single nucleotide noted if homozygote and two nucleotides
 separated by a space if heterozygote (e.g. "T", "T G"). \item{sn: }SNP
 genotypes stored with genotypes in each cell as 0 (homozygous allele 1), 1
 (heterozygous), or 2 (homozyogus allele 2). \item{.genepop: } genepop file
 format, with genotypes stored as either 4 or 6 numeric characters. Works
 only with bi-allelic data. Genotypes will be converted (internally) to NN:
 the first allele (numerically) will be coded as A, the second as C.
 \item{FSTAT: } FSTAT file format, with genotypes stored as either 4 or 6
 numeric characters. Works only with bi-allelic data. Genotypes will be
 converted (internally) to NN: the first allele (numerically) will be coded
 as A, the second as C. \item{plink: } plink .bed, .fam, and .bim files, via
 \code{\link[genio]{read_plink}}. If any of these file types is provided,
 snpR via \code{\link[genio]{read_plink}} will look for the other file types
 automatically. Sample metadata should be contained in the .fam file and
 SNP metadata in the .bim file, so sample or snp meta data provided here will
 be ignored.}

 Additional arguments can be provided to import.snpR.data that will be passed
 to \code{\link[data.table]{fread}} when reading in genotype data.

 Sample and snp metadata can also be provided via file path, and will be read
 in using \code{\link[data.table]{fread}} \emph{with the default settings}.
 If these settings are not correct, please read in the metadata manually and
 provide to import.snpR.data.
}

\section{Conversions from other S4 objects}{


 Supports automatic conversions from some other popular S4 object types.
 Options:

 \itemize{ \item{genind: } \code{\link[adegenet]{genind}} objects from
 adegenet. Note, no need to import genpop objects, the equivalent statistics
 are calculated automatically when functions called with facets. Sample and
 SNP IDs as well as, when possible, pop IDs will be taken from the genind
 object. This data will be added too but will not replace data provided to
 the SNP or sample.meta arguments. Note that only \emph{SNP} data is
 currently allowed, data with more than two alleles for loci will return an
 error. \item{genlight: } \code{\link[adegenet]{genlight}} objects from
 adegenet. Sample and SNP IDs, SNP positions, SNP chromosomes, and pop IDs
 will be taken from the genlight object if possible. This data will be added
 too but will not replace data provided to the SNP or sample.meta arguments.
 \item{vcfR: } \code{\link[vcfR]{vcfR}} objects from vcfR. If not provided,
 snp metadata is taken from the fixed fields in the VCF and sample metadata
 from the sample IDs. Note that this only imports SNPs with called
 genotypes!}
}

\section{Slots}{


 Genotypes, metadata, and results are stored in slots and directly accessable
 with the 'at' symbol operator. Slots are as follows:

 \itemize{ \item{sample.meta: } sample metadata (population, family,
 phenotype, etc.). \item{snp.meta: } SNP metadata (SNP ID, chromosome,
 linkage group, position, etc.). \item{facet.meta: } internal metadata used
 to track facets that have been previously applied to the dataset.
 \item{mDat: } missing data format. \item{snp.form: } number of characters
 per SNP. \item{genotables: } a list containing tabulated genotypes (gs),
 allele counts (as), and missing data (wm). facet.meta contains the
 corresponding metadata. \item{ac: } data in allele count format, used
 internally. facet.meta contains corresponding metadata. \item{facets: }
 vector of the facets that have been added to the data. \item{facet.type: }
 classes of the added facets (snp, sample, complex, or .base). \item{stats: }
 data.frame containing all calculated non-pairwise single-snp statistics and
 metadata. \item{window.stats: } data.frame/table containing all non-pairwise
 statistics calculated for sliding windows. \item{pairwise.stats: }
 data.frame/table containing all pairwise (fst) single-snp statistics.
 \item{pairwise.window.stats: } data.frame/table containing all pairwise
 statistics calculated for sliding windows. \item{sample.stats: }
 data.frame/table containing statistics caluclated for each individual
 sample. \item{pairwise.LD: } nested list containing linkage disequilibrium
 data (see \code{\link{calc_pairwise_ld}} for more information).
 \item{window.bootstraps: } data.frame/table containing all calculated
 bootstraps for sliding window statistics. \item{sn: } list containing "sn",
 sn formatted data, and "type" type of interpolation. \item{calced_stats: }
 Named list of named character vectors that tracks the calculated statistics
 for each facet (see \code{\link{calc_genetic_distances}} for more
 information). \item{genetic_distances: } nested list containing genetic
 distance data. \item{names: } column names for genotypes. \item{row.names: }
 row names for genotypes. \item{.Data: } list of vectors containing raw
 genotype data. \item{.S3Class: } notes the inherited S3 object class. }

 Note that most of these slots are used primarily internally.

 All calculated data can be accessed using the \code{\link{get.snpR.stats}}
 function. See documentation.
}

\examples{
# import example data as a snpRdata object
# produces data identical to that contained in the stickSNPs example dataset.
genos <- stickRAW[,-c(1:2)]
snp_meta <- stickRAW[,1:2]
sample_meta <- data.frame(pop = substr(colnames(stickRAW)[-c(1:2)], 1, 3), 
                          fam = rep(c("A", "B", "C", "D"), 
                                    length = ncol(stickRAW) - 2), 
                          stringsAsFactors = FALSE)
import.snpR.data(genos, snp.meta = snp_meta, sample.meta = sample_meta, 
                 mDat = "NN")

# from an adegenet genind object
ex.genind  <- adegenet::df2genind(t(stickRAW[,-c(1:2)]), 
                                  ncode = 1, NA.char = "N") # get genind data
# note, will add whatever metadata data is in the genind object to the 
# snpRdata object. 
# Could be run without the snp or sample metadatas.
import.snpR.data(ex.genind, snp_meta, sample_meta) 

# from an adegenet genlight object
## create a dummy dataset, add some metadata
dat <- lapply(1:50, function(i) sample(c(0,1,2, NA), 1000, 
              prob=c(.25, .49, .25, .01), replace=TRUE))
names(dat) <- paste("indiv", 1:length(dat))
print(object.size(dat), unit="aut") # size of the original data
genlight <- methods::new("genlight", dat) # conversion
newalleles <- character(adegenet::nLoc(genlight))
for(i in 1:length(newalleles)){
  newalleles[i] <- paste0(sample(c("a", "c", "g", "t"), 2, FALSE), 
                          collapse = "/")
}
adegenet::alleles(genlight) <- newalleles
adegenet::pop(genlight) <- sample(LETTERS[1:4], 50, TRUE)
adegenet::position(genlight) <- sample(100000, 1000, FALSE)
adegenet::chr(genlight) <- sample(10, 1000, TRUE)

## run the conversion
dat <- import.snpR.data(genlight)

\dontrun{
## not run:
# from a file:
# note that the drop argument is passed to data.table::fread!
dat <- import.snpR.data(system.file("extdata", "stick_NN_input.txt", 
                                    package = "snpR"), drop = 1:2) 
# if wanted, snp and sample metadata could be provided as usual.

## not run:
# from plink:
# make plink data
format_snps(stickSNPs, "plink", outfile = "plink_test", chr = "chr")

# read plink
dat <- import.snpR.data("plink_test.bed")
}

}
\author{
William Hemstrom
}
